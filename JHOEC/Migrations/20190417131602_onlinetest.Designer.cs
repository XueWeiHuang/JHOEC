// <auto-generated />
using System;
using JHOEC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JHOEC.Migrations
{
    [DbContext(typeof(OECContext))]
    [Migration("20190417131602_onlinetest")]
    partial class onlinetest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JHOEC.Models.Country", b =>
                {
                    b.Property<string>("CountryCode")
                        .HasColumnName("countryCode")
                        .HasMaxLength(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<string>("PhonePattern")
                        .HasColumnName("phonePattern")
                        .HasMaxLength(50);

                    b.Property<string>("PostalPattern")
                        .HasColumnName("postalPattern")
                        .HasMaxLength(150);

                    b.Property<string>("RetailTaxName")
                        .HasColumnName("retailTaxName")
                        .HasMaxLength(50);

                    b.Property<double?>("RetailTaxRate")
                        .HasColumnName("retailTaxRate");

                    b.HasKey("CountryCode");

                    b.ToTable("country");
                });

            modelBuilder.Entity("JHOEC.Models.Crop", b =>
                {
                    b.Property<int>("CropId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("cropId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image")
                        .HasColumnName("image")
                        .HasMaxLength(30);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(255);

                    b.HasKey("CropId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("crop");
                });

            modelBuilder.Entity("JHOEC.Models.Farm", b =>
                {
                    b.Property<int>("FarmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("farmId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CellPhone")
                        .HasColumnName("cellPhone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("County")
                        .HasColumnName("county")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateJoined")
                        .HasColumnName("dateJoined")
                        .HasColumnType("datetime");

                    b.Property<string>("Directions")
                        .HasColumnName("directions")
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("HomePhone")
                        .HasColumnName("homePhone")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("LastContactDate")
                        .HasColumnName("lastContactDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PostalCode")
                        .HasColumnName("postalCode")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .HasColumnName("provinceCode")
                        .HasMaxLength(2);

                    b.Property<string>("Town")
                        .HasColumnName("town")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("FarmId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("ProvinceCode")
                        .HasName("province code");

                    b.ToTable("farm");
                });

            modelBuilder.Entity("JHOEC.Models.Fertilizer", b =>
                {
                    b.Property<string>("FertilizerName")
                        .HasColumnName("fertilizerName")
                        .HasMaxLength(255);

                    b.Property<bool>("Liquid")
                        .HasColumnName("liquid");

                    b.Property<bool>("Oecproduct")
                        .HasColumnName("OECProduct");

                    b.HasKey("FertilizerName")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.ToTable("fertilizer");
                });

            modelBuilder.Entity("JHOEC.Models.Plot", b =>
                {
                    b.Property<int>("PlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("plotId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("BicarbP")
                        .HasColumnName("bicarbP");

                    b.Property<double?>("Calcium")
                        .HasColumnName("calcium");

                    b.Property<double?>("Cec")
                        .HasColumnName("CEC");

                    b.Property<string>("Comments")
                        .HasColumnName("comments")
                        .HasColumnType("ntext");

                    b.Property<DateTime?>("DateHarvested")
                        .HasColumnName("dateHarvested")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatePlanted")
                        .HasColumnName("datePlanted")
                        .HasColumnType("datetime");

                    b.Property<int?>("FarmId")
                        .HasColumnName("farmId");

                    b.Property<double?>("Magnesium")
                        .HasColumnName("magnesium");

                    b.Property<double?>("OrganicMatter")
                        .HasColumnName("organicMatter");

                    b.Property<double?>("PHbuffer")
                        .HasColumnName("pHBuffer");

                    b.Property<double?>("PHsoil")
                        .HasColumnName("pHSoil");

                    b.Property<int?>("PatternRepeats")
                        .HasColumnName("patternRepeats");

                    b.Property<double?>("PercentBaseSaturationCa")
                        .HasColumnName("percentBaseSaturationCa");

                    b.Property<double?>("PercentBaseSaturationH")
                        .HasColumnName("percentBaseSaturationH");

                    b.Property<double?>("PercentBaseSaturationK")
                        .HasColumnName("percentBaseSaturationK");

                    b.Property<double?>("PercentBaseSaturationMg")
                        .HasColumnName("percentBaseSaturationMg");

                    b.Property<int?>("PlantingRate")
                        .HasColumnName("plantingRate");

                    b.Property<bool>("PlantingRateByPounds")
                        .HasColumnName("plantingRateByPounds");

                    b.Property<double?>("Potassium")
                        .HasColumnName("potassium");

                    b.Property<int?>("RowWidth")
                        .HasColumnName("rowWidth");

                    b.Property<int?>("VarietyId")
                        .HasColumnName("varietyId");

                    b.HasKey("PlotId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("FarmId")
                        .HasName("locationID");

                    b.HasIndex("VarietyId")
                        .HasName("cropID");

                    b.ToTable("plot");
                });

            modelBuilder.Entity("JHOEC.Models.Province", b =>
                {
                    b.Property<string>("ProvinceCode")
                        .HasColumnName("provinceCode")
                        .HasMaxLength(2);

                    b.Property<string>("CountryCode")
                        .HasColumnName("countryCode")
                        .HasMaxLength(2);

                    b.Property<bool?>("FederalTaxIncluded")
                        .HasColumnName("federalTaxIncluded");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50);

                    b.Property<string>("RetailTaxName")
                        .HasColumnName("retailTaxName")
                        .HasMaxLength(50);

                    b.Property<double?>("RetailTaxRate")
                        .HasColumnName("retailTaxRate");

                    b.HasKey("ProvinceCode");

                    b.ToTable("province");
                });

            modelBuilder.Entity("JHOEC.Models.Treatment", b =>
                {
                    b.Property<int>("TreatmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("treatmentId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Moisture")
                        .HasColumnName("moisture");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(256);

                    b.Property<int>("PlotId")
                        .HasColumnName("plotId");

                    b.Property<double?>("Weight")
                        .HasColumnName("weight");

                    b.Property<double?>("Yield")
                        .HasColumnName("yield");

                    b.HasKey("TreatmentId");

                    b.HasIndex("PlotId");

                    b.ToTable("treatment");
                });

            modelBuilder.Entity("JHOEC.Models.TreatmentFertilizer", b =>
                {
                    b.Property<int>("TreatmentFertilizerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("treatmentFertilizerId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FertilizerName")
                        .HasColumnName("fertilizerName")
                        .HasMaxLength(255);

                    b.Property<string>("RateMetric")
                        .HasColumnName("rateMetric")
                        .HasMaxLength(255);

                    b.Property<double?>("RatePerAcre")
                        .HasColumnName("ratePerAcre");

                    b.Property<int?>("TreatmentId")
                        .HasColumnName("treatmentId");

                    b.HasKey("TreatmentFertilizerId");

                    b.HasIndex("FertilizerName");

                    b.HasIndex("TreatmentId");

                    b.ToTable("treatmentFertilizer");
                });

            modelBuilder.Entity("JHOEC.Models.Variety", b =>
                {
                    b.Property<int>("VarietyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("varietyId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CropId")
                        .HasColumnName("cropId");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(255);

                    b.HasKey("VarietyId")
                        .HasAnnotation("SqlServer:Clustered", false);

                    b.HasIndex("CropId")
                        .HasName("cropID");

                    b.ToTable("variety");
                });

            modelBuilder.Entity("JHOEC.Models.Farm", b =>
                {
                    b.HasOne("JHOEC.Models.Province", "ProvinceCodeNavigation")
                        .WithMany("Farm")
                        .HasForeignKey("ProvinceCode")
                        .HasConstraintName("FK_farm_province");
                });

            modelBuilder.Entity("JHOEC.Models.Plot", b =>
                {
                    b.HasOne("JHOEC.Models.Farm", "Farm")
                        .WithMany("Plot")
                        .HasForeignKey("FarmId")
                        .HasConstraintName("plots_FK00");

                    b.HasOne("JHOEC.Models.Variety", "Variety")
                        .WithMany("Plot")
                        .HasForeignKey("VarietyId")
                        .HasConstraintName("plots_FK01");
                });

            modelBuilder.Entity("JHOEC.Models.Treatment", b =>
                {
                    b.HasOne("JHOEC.Models.Plot", "Plot")
                        .WithMany("Treatment")
                        .HasForeignKey("PlotId")
                        .HasConstraintName("FK_treatment_plot");
                });

            modelBuilder.Entity("JHOEC.Models.TreatmentFertilizer", b =>
                {
                    b.HasOne("JHOEC.Models.Fertilizer", "FertilizerNameNavigation")
                        .WithMany("TreatmentFertilizer")
                        .HasForeignKey("FertilizerName")
                        .HasConstraintName("FK_treatmentFertilizer_fertilizer");

                    b.HasOne("JHOEC.Models.Treatment", "Treatment")
                        .WithMany("TreatmentFertilizer")
                        .HasForeignKey("TreatmentId")
                        .HasConstraintName("FK_treatmentFertilizer_treatment");
                });

            modelBuilder.Entity("JHOEC.Models.Variety", b =>
                {
                    b.HasOne("JHOEC.Models.Crop", "Crop")
                        .WithMany("Variety")
                        .HasForeignKey("CropId")
                        .HasConstraintName("cropVariety_FK00");
                });
#pragma warning restore 612, 618
        }
    }
}
